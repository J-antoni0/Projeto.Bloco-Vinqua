
@charset "UTF-8";

* {
    font-family: 'Jersey 10' , 'Times New Roman';
    font-weight: 500;
    font-optical-sizing: auto;  /* Ajusta automaticamente o design da fonte para otimização */
    letter-spacing: 1px;   /* Adiciona leve espaçamento entre as letras para um ar sofisticado */
    margin: 0;
    border: 0;
    padding: 0;
}

:root {

    --cormain: #EDEDED;
    --cor-textos-padrões: #ffffff;
    --cor-texto-menos-chamativo: #E8E7E8;
    --cor-button-acessar: rgba(255, 255, 255, 0.795);
}


html , body {

    width: 100%;
    height: 100%;
    overflow: hidden;     
}

html > body {

    display: flex;
    justify-content: center;
    align-items: center;
    background: white url(../imagens/wallpaper004.jpg) center / cover no-repeat fixed;
}

html > body > main {
    width: 300px;
    height: 250px;
    text-align: center;
    border-radius: 25px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.226);
    background: white url(../imagens/../imagens/wallpaper006.jpg) center / contain no-repeat fixed;    

}

body > #container-inicial {

    opacity: 0;  /* O elemento ficara invisível (opacidade 0). */
    transition: opacity 1s ease-in;  /* Define uma transição suave de 1 segundo para a propriedade opacity. */

}

body > #container-inicial.mostrar {   /* "mostrar" é o nome declarado para a classe adicionada no JS */

    opacity: 1;  /* Quando a classe "mostrar" é adicionada, a opacidade vai para 1 (totalmente visível). */

}

main > p.texto-tipo-1 {
    line-height: 0.6em;    /* cria espaçamento vertical entre os textos */
    color: var(--cor-textos-padrões);
    font-size: 3em;
    font-style: italic;
    padding: 15px 5px 5px 5px;
    text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.514);
    cursor: context-menu;
}

main > p#p-segundario {
    padding: 5px 45px 5px 5px;
}

span.texto-menos-chamativo {
    color: var(--cor-texto-menos-chamativo);
}

main > fieldset {

    height: auto;
    display: grid;
    grid-template-columns: 1fr 2fr; /* Uma coluna menor para labels e outra maior para inputs (primeira medição é para o primeiro elemento filho, segunda medição é para o seg elemento filho - 1fr do espaço do elemento pai, 2fr do espaço do elemento pai)*/
    gap: 10px 0px; /* Define um espaço de 15px entre as linhas e 10px entre as colunas. */
    padding: 30px 10px 10px 10px;
    place-items: center;
}

main > fieldset > label {
    position: relative;
    left: 5px;
    text-align: center;
    font-size: 1.2em;
    font-style: italic;
    color: var(--cor-texto-menos-chamativo);
    text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.514);
}

main > fieldset > input {
    width: 150px;
    padding: 5px;
    box-sizing: border-box; /* Garante que o padding não ultrapasse a largura definida */
    border-radius: 10px 0px 10px 0px;
    box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.233);
    background-color: white;
}

main > fieldset#botao-acessar {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px;
}

fieldset#botao-acessar > input#botaoacessar {
    color: var(--cor-button-acessar) ;
    background-color: white;
    text-shadow: 0px 0px 4px black;
    font-style: italic;
    font-size: 15px;
}

fieldset#botao-acessar > input#botaoacessar:hover {
    transition-duration: 2s;
    box-shadow: 0px 0px 4px white;
    background-color: transparent;
    color:var(--cor-texto-menos-chamativo);
    cursor: pointer;
}

input.animate {
    animation: clickEffect 0.6s ease-in-out;  /* faz com que o efeito tenha 0.6 milissegundos */
}
@keyframes clickEffect {
    0% {
        transform: scale(1);  /* escala inicial padrão */
    }
    50% {
        transform: scale(1.1); /* escala expandida */
    }
    100% {
        transform: scale(1)  /* retorna a escala padrão */
    }
}


#container-do-carregador {
    display: none;
    align-items: center;
    justify-content: center;
    position: fixed;
    height: 50px;
    width: 50px;
}

#carregamento {
    height: 30px;
    width: 30px;
    border: 5px solid rgba(0, 0, 0, 0.514);
    border-top-color: white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}